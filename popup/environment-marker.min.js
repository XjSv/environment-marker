const hide="none",show="block",positionsMap=[{value:"top-left",label:"Top Left"},{value:"top-right",label:"Top Right"},{value:"bottom-left",label:"Bottom Left"},{value:"bottom-right",label:"Bottom Right"}];let exportFile=null,pickr=null;function onError(e){console.log(e)}function truncateString(e,t){return e.length<=t?e:e.slice(0,t)+"..."}function initialize(){browser.storage.local.get(null).then(e=>{let t=Object.keys(e);t.length>0?showOrHideEmptyNotice(hide):showOrHideEmptyNotice(show);for(let o of t)displaySetting(o,e[o][0],e[o][1],e[o][2])},onError)}function showOrHideEmptyNotice(e=null){e!==show&&e!==hide?browser.storage.local.get(null).then(e=>{let t=Object.keys(e);$(".empty-notice").css("display",t.length>0?"none":"block")},onError):$(".empty-notice").css("display",e)}function showErrorMessage(e){$(".outer-wrapper .message-container .error").length?($(".outer-wrapper .message-container .error").remove(),$(".outer-wrapper .message-container").append('<div class="error col-12">'+e+"</div>")):$(".outer-wrapper .message-container").append('<div class="error col-12">'+e+"</div>")}function saveSettings(e,t,o,n,r=!1){let i=r?e:$(".settings-input #url").val(),a=r?t:pickr.getSelectedColor().toHEXA().toString(0),l=r?o:$(".settings-input #label").val(),s=r?n:$(".settings-input #position").val();""!==i&&""!==a&&""!==l?browser.storage.local.get(i).then(e=>{Object.keys(e).length<1?($(".outer-wrapper .message-container .error").length&&$(".outer-wrapper .message-container .error").remove(),$(".settings-input #url").val(""),$(".settings-input #label").val(""),$(".settings-input #position").val("top-left"),storeSetting(i,a,l,s)):showErrorMessage("Marker for this URL already exists!")},onError):showErrorMessage(""===l?"Enter Label !":"Enter URL !")}function storeSetting(e,t,o,n){browser.storage.local.set({[e]:[t,o,n]}).then(()=>{showOrHideEmptyNotice(hide),displaySetting(e,t,o,n)},onError)}function displaySetting(e,t,o,n){let r=positionsMap.reduce((function(e,t){return t.value==n&&(e=t.label),e}),{}),i=$("<div/>",{class:"setting"}),a=$("<div/>",{class:"row no-gutters mb-2 display-container"}),l=$("<div/>",{class:"col-10 pr-2 display-labelUrl",text:o+" ("+e+") at "+r,click:function(){a.hide(),d.show()}}),s=$("<div/>",{class:"col-1 pr-2 display-color",html:'<div style="background-color: '+t+';"></div>',click:function(){a.hide(),d.show()}}),c=$("<div/>",{class:"col-1 display-delete"}),p=$("<button/>",{class:"btn btn-danger btn-sm delete",html:'<i class="fas fa-trash fa-lg"></i>',click:function(){$(this).parent().parent().parent().remove(),browser.storage.local.remove(e),showOrHideEmptyNotice()}}),d=$("<div/>",{class:"row no-gutters mb-2 edit-container",style:"display: none;"}),u=$("<div/>",{class:"col-10 pr-1 mb-2 edit-url-container"}),g=$("<input/>",{class:"form-control edit-url",value:e}),b=$("<div/>",{class:"col-1 pr-1 mb-2 edit-color"}),h=$("<input/>",{class:"color-picker",value:t}),v=$("<div/>",{class:"col-1 mb-2 edit-delete"}),m=$("<button/>",{class:"btn btn-success btn-sm update",html:'<i class="fas fa-pencil-alt fa-lg"></i>',click:function(){let r=g.val(),a=h.val(),l=w.val(),s=k.val();r===e&&a===t&&l===o&&s===n||(updateSetting(e,r,a,l,s),i.remove())}}),f=$("<div/>",{class:"col-6 pr-2 edit-label-container"}),w=$("<input/>",{class:"form-control edit-label",value:o}),y=$("<div/>",{class:"col-5 pr-2 edit-position-container"}),k=$("<select/>",{class:"form-control edit-position"});for(let e=0;e<positionsMap.length;e++)positionsMap[e].value===n?k.append(new Option(positionsMap[e].label,positionsMap[e].value,!0,!0)):k.append(new Option(positionsMap[e].label,positionsMap[e].value));let E=$("<div/>",{class:"col-1 edit-cancel"}),S=$("<button/>",{class:"btn btn-secondary btn-sm cancel",html:'<i class="fas fa-times fa-lg"></i>',click:function(){a.show(),d.hide(),g.val(e),h.val(t),w.val(o),k.val(n)}});u.append(g),b.append(h),y.append(k),v.append(m),f.append(w),E.append(S),d.append(u),d.append(b),d.append(v),d.append(f),d.append(y),d.append(E),c.append(p),a.append(l),a.append(s),a.append(c),i.append(a),i.append(d),$(".settings-container").append(i),Pickr.create({el:h[0],theme:"nano",default:t,useAsButton:!1,swatches:["rgba(244, 67,  54, 1)","rgba(233, 30,  99, 1)","rgba(156, 39, 176, 1)","rgba(103, 58, 183, 1)","rgba(63,  81, 181, 1)","rgba(33, 150, 243, 1)","rgba(3,  169, 244, 1)"],components:{preview:!0,opacity:!1,hue:!0,interaction:{hex:!1,rgba:!1,hsla:!1,hsva:!1,cmyk:!1,input:!0,clear:!1,save:!0}}}).on("save",(e,t)=>{h.val(e.toHEXA().toString(0)),t.hide()})}function updateSetting(e,t,o,n,r){browser.storage.local.set({[t]:[o,n,r]}).then(()=>{e!==t?browser.storage.local.remove(e).then(()=>{displaySetting(t,o,n,r)},onError):displaySetting(t,o,n,r)},onError)}function clearAll(){$(".settings-container .setting").each((e,t)=>{t.remove()}),browser.storage.local.clear(),showOrHideEmptyNotice(show)}function makeJsonExportFile(e){let t=new Blob([e],{type:"application/json"});return null!==exportFile&&window.URL.revokeObjectURL(exportFile),exportFile=window.URL.createObjectURL(t),exportFile}function exportConfig(){browser.storage.local.get(null).then(e=>{let t=Object.keys(e),o=[];if(t.length>0){for(let n of t)o.push({url:n,color:e[n][0],label:e[n][1],position:e[n][2]});let n=JSON.stringify(o),r=document.createElement("a");r.setAttribute("download","configurations.json"),r.href=makeJsonExportFile(n),document.body.appendChild(r),window.requestAnimationFrame((function(){let e=new MouseEvent("click");r.dispatchEvent(e),document.body.removeChild(r)}))}},onError)}function importConfig(){let e=document.getElementById("importFile"),t=e.files[0];const o=new FileReader;o.addEventListener("load",(function(){let t=JSON.parse(o.result);t.length>0&&t.forEach((function(e){saveSettings(e.url,e.color,e.label,e.position,!0)})),e.value=""})),o.readAsText(t)}$(document).ready(()=>{initialize(),$(".save").click(()=>{saveSettings()}),$(".clear").click(()=>{clearAll()}),$(".import-export").click(()=>{$(".export-import-container").toggle()}),$(".export").click(()=>{exportConfig()}),$(".import").click(()=>{importConfig()}),$(document).keydown((function(e){if("Enter"!==e.key&&"NumpadEnter"!==e.key||saveSettings(),"Escape"!==e.key)return!0;window.close()})),pickr=Pickr.create({el:".color-picker",theme:"nano",useAsButton:!1,swatches:["rgba(244, 67,  54, 1)","rgba(233, 30,  99, 1)","rgba(156, 39, 176, 1)","rgba(103, 58, 183, 1)","rgba(63,  81, 181, 1)","rgba(33, 150, 243, 1)","rgba(3,  169, 244, 1)"],components:{preview:!0,opacity:!1,hue:!0,interaction:{hex:!1,rgba:!1,hsla:!1,hsva:!1,cmyk:!1,input:!0,clear:!1,save:!0}}}),pickr.on("save",(e,t)=>{t.hide()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
