{"version":3,"sources":["options.js"],"names":["noticeSuccessExport","browser","i18n","getMessage","noticeSuccessImport","errorNoRibbonsToExport","errorChooseFile","inputChooseFile","buttonExport","buttonImport","importWarning","errorImportLabelEmpty","errorImportUrlEmpty","errorImportColorEmpty","inputEnableRegExp","inputEnableTabCounter","noticeSettingSaved","ariaLabelAlertClose","optionsSettingsSection","optionsExportImportSection","inputFontLabel","inputFontHelpText","inputRegExpHelpText","inputTabCounterHelpText","errorFileEmptyOrFormat","buttonOptions","exportFile","languageCode","getUILanguage","languageCodeTwoChar","split","markersKey","searchModeKey","tabCounterKey","swatchesKey","dbVersionKey","fontKey","exportFileName","onError","error","console","log","showMessage","textMsg","errorFlag","messageClass","$","length","alert","append","window","setTimeout","makeJsonExportFile","text","data","Blob","type","URL","revokeObjectURL","createObjectURL","exportConfig","configurations","markers","settings","storage","sync","get","then","storedResults","markersStoredArray","fontStoredString","searchModeStoredBool","tabCounterStoredBool","storedSwatchesArray","colorSwatchesStoredArray","storedObject","push","url","settingUrl","color","settingColor","label","settingLabel","position","settingPosition","size","settingSize","fontString","searchModeBool","tabCounterBool","colorSwatchesArray","configurations_json","JSON","stringify","link","document","createElement","setAttribute","href","body","appendChild","requestAnimationFrame","event","MouseEvent","dispatchEvent","removeChild","importConfig","importFileInput","getElementById","importFile","files","reader","FileReader","addEventListener","importConfigObjects","parse","result","hasOwnProperty","storedArray","errorMessages","importConfigObject","set","storeObject","html","value","readAsText","ready","attr","title","exportButton","importButton","click","change","target","name","storedSearchMode","storedSearchModeBool","prop","enableRegexpValue","is","storedTabCounter","storedTabCounterBool","enableTabCounterValue","fontpicker","lang","variants","lazyLoad","showClear","nrRecents","localFonts","Arial","category","Georgia","Verdana","localFontsUrl","onSelect","fontObject","fontStoreValue","fontType","fontSpec","storedFont","fontTmp","font","variant","val","trigger"],"mappings":"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","file":"options.min.js","sourcesContent":["let noticeSuccessExport = browser.i18n.getMessage(\"noticeSuccessExport\"),\r\n    noticeSuccessImport = browser.i18n.getMessage(\"noticeSuccessImport\"),\r\n    errorNoRibbonsToExport = browser.i18n.getMessage(\"errorNoRibbonsToExport\"),\r\n    errorChooseFile = browser.i18n.getMessage(\"errorChooseFile\"),\r\n    inputChooseFile = browser.i18n.getMessage(\"inputChooseFile\"),\r\n    buttonExport = browser.i18n.getMessage(\"buttonExport\"),\r\n    buttonImport = browser.i18n.getMessage(\"buttonImport\"),\r\n    importWarning = browser.i18n.getMessage(\"importWarning\"),\r\n    errorImportLabelEmpty = browser.i18n.getMessage(\"errorImportLabelEmpty\"),\r\n    errorImportUrlEmpty = browser.i18n.getMessage(\"errorImportUrlEmpty\"),\r\n    errorImportColorEmpty = browser.i18n.getMessage(\"errorImportColorEmpty\"),\r\n    inputEnableRegExp = browser.i18n.getMessage(\"inputEnableRegExp\"),\r\n    inputEnableTabCounter = browser.i18n.getMessage(\"inputEnableTabCounter\"),\r\n    noticeSettingSaved = browser.i18n.getMessage(\"noticeSettingSaved\"),\r\n    ariaLabelAlertClose = browser.i18n.getMessage(\"ariaLabelAlertClose\"),\r\n    optionsSettingsSection = browser.i18n.getMessage(\"optionsSettingsSection\"),\r\n    optionsExportImportSection = browser.i18n.getMessage(\"optionsExportImportSection\"),\r\n    inputFontLabel = browser.i18n.getMessage(\"inputFontLabel\"),\r\n    inputFontHelpText = browser.i18n.getMessage(\"inputFontHelpText\"),\r\n    inputRegExpHelpText = browser.i18n.getMessage(\"inputRegExpHelpText\"),\r\n    inputTabCounterHelpText = browser.i18n.getMessage(\"inputTabCounterHelpText\"),\r\n    errorFileEmptyOrFormat = browser.i18n.getMessage(\"errorFileEmptyOrFormat\"),\r\n    buttonOptions = browser.i18n.getMessage(\"buttonOptions\"),\r\n    exportFile = null;\r\n\r\nlet languageCode = browser.i18n.getUILanguage(),\r\n    languageCodeTwoChar = languageCode.split('-')[0];\r\nconst markersKey = '__em-markers__';\r\nconst searchModeKey = '__em-search-mode__';\r\nconst tabCounterKey = '__em-tab-counter__';\r\nconst swatchesKey = '__em-swatches__';\r\nconst dbVersionKey = '__em-version__';\r\nconst fontKey = '__em-font__';\r\nconst exportFileName = 'environment-marker-export.json';\r\n\r\nfunction onError(error) {\r\n  console.log(error);\r\n}\r\n\r\n/* Show error or success messages */\r\nfunction showMessage(textMsg, errorFlag = false) {\r\n  let messageClass = errorFlag ? 'alert-danger' : 'alert-success';\r\n  if ($('.alert-dismissible').length) {\r\n    $('.alert-dismissible').alert('close');\r\n  }\r\n\r\n  $('.outer-wrapper .message-container').append(\r\n    '<div class=\"alert ' + messageClass + ' alert-dismissible fade show\" role=\"alert\">' + textMsg +\r\n    '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"' + ariaLabelAlertClose + '\"></button>' +\r\n    '</div>'\r\n  );\r\n\r\n  window.setTimeout(function() {\r\n    $('.alert-dismissible').alert('close');\r\n  }, 3000);\r\n}\r\n\r\n/* Make a URL Object from json text */\r\nfunction makeJsonExportFile(text) {\r\n  let data = new Blob([text], { type: 'application/json' });\r\n\r\n  // If we are replacing a previously generated file we need to\r\n  // manually revoke the object URL to avoid memory leaks.\r\n  if (exportFile !== null) {\r\n    window.URL.revokeObjectURL(exportFile);\r\n  }\r\n\r\n  exportFile = window.URL.createObjectURL(data);\r\n  return exportFile;\r\n}\r\n\r\n/* Get all configurations from the storage and output a json file */\r\nfunction exportConfig() {\r\n  let configurations = {\r\n    markers: [],\r\n    settings: []\r\n  };\r\n\r\n  browser.storage.sync.get(markersKey).then((storedResults) => {\r\n    let markersStoredArray = storedResults[markersKey] || [];\r\n\r\n    if (markersStoredArray.length == 0) {\r\n      showMessage(errorNoRibbonsToExport, true);\r\n    } else {\r\n      browser.storage.sync.get(fontKey).then((storedResults) => {\r\n        let fontStoredString = storedResults[fontKey] || '';\r\n        browser.storage.sync.get(searchModeKey).then((storedResults) => {\r\n          let searchModeStoredBool = storedResults[searchModeKey] || false;\r\n          browser.storage.sync.get(tabCounterKey).then((storedResults) => {\r\n            let tabCounterStoredBool = storedResults[tabCounterKey] || false;\r\n            browser.storage.sync.get(swatchesKey).then((storedSwatchesArray) => {\r\n              let colorSwatchesStoredArray = storedSwatchesArray[swatchesKey];\r\n\r\n              for (let storedObject of markersStoredArray) {\r\n                configurations.markers.push({\r\n                  \"url\": storedObject.settingUrl,\r\n                  \"color\": storedObject.settingColor,\r\n                  \"label\": storedObject.settingLabel,\r\n                  \"position\": storedObject.settingPosition,\r\n                  \"size\": storedObject.settingSize\r\n                });\r\n              }\r\n\r\n              configurations.settings.push({\r\n                \"fontString\": fontStoredString\r\n              });\r\n\r\n              configurations.settings.push({\r\n                \"searchModeBool\": searchModeStoredBool\r\n              });\r\n\r\n              configurations.settings.push({\r\n                \"tabCounterBool\": tabCounterStoredBool\r\n              });\r\n\r\n              configurations.settings.push({\r\n                \"colorSwatchesArray\": colorSwatchesStoredArray\r\n              });\r\n\r\n              let configurations_json = JSON.stringify(configurations);\r\n              let link = document.createElement('a');\r\n              link.setAttribute('download', exportFileName);\r\n              link.href = makeJsonExportFile(configurations_json);\r\n              document.body.appendChild(link);\r\n\r\n              // Wait for the link to be added to the document\r\n              window.requestAnimationFrame(function () {\r\n                let event = new MouseEvent('click');\r\n                link.dispatchEvent(event);\r\n                document.body.removeChild(link);\r\n\r\n                showMessage(noticeSuccessExport);\r\n              });\r\n\r\n            }, onError);\r\n          }, onError);\r\n        }, onError);\r\n      }, onError);\r\n    }\r\n  }, onError);\r\n}\r\n\r\n/* Read import file and load all settings into the stoage */\r\nfunction importConfig() {\r\n  let importFileInput = document.getElementById('importFile'),\r\n      importFile = importFileInput.files[0];\r\n\r\n  if (importFile) {\r\n    const reader = new FileReader();\r\n\r\n    // This event listener will happen when the reader has read the file\r\n    reader.addEventListener('load', function() {\r\n      let importConfigObjects = JSON.parse(reader.result); // Parse the result into an object\r\n\r\n      if (importConfigObjects.hasOwnProperty('markers') && importConfigObjects.hasOwnProperty('settings')) {\r\n        let storedArray = [],\r\n            errorMessages = '';\r\n\r\n        if (importConfigObjects.settings.length > 0) {\r\n          for (let importConfigObject of importConfigObjects.settings) {\r\n            if (importConfigObject.hasOwnProperty('searchModeBool')) {\r\n              browser.storage.sync.set({[searchModeKey]: importConfigObject.searchModeBool}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('tabCounterBool')) {\r\n              browser.storage.sync.set({[tabCounterKey]: importConfigObject.tabCounterBool}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('fontString')) {\r\n              browser.storage.sync.set({[fontKey]: importConfigObject.fontString}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('colorSwatchesArray')) {\r\n              browser.storage.sync.set({[swatchesKey]: importConfigObject.colorSwatchesArray}).then(() => {\r\n              }, onError);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (importConfigObjects.markers.length > 0) {\r\n          for (let importConfigObject of importConfigObjects.markers) {\r\n            if (importConfigObject.url !== '' && importConfigObject.color !== '' && importConfigObject.label !== '') {\r\n              let storeObject = {\r\n                settingUrl: importConfigObject.url,\r\n                settingColor: importConfigObject.color,\r\n                settingLabel: importConfigObject.label,\r\n                settingPosition: importConfigObject.position,\r\n                settingSize: importConfigObject.size\r\n              };\r\n              storedArray.push(storeObject);\r\n            } else {\r\n              // Empty field error messages\r\n              if (importConfigObject.url === '') {\r\n                errorMessages += '<li>' + errorImportUrlEmpty + '</li>';\r\n              }\r\n              if (importConfigObject.label === '') {\r\n                errorMessages += '<li>' + errorImportLabelEmpty + '</li>';\r\n              }\r\n              if (importConfigObject.color === '') {\r\n                errorMessages += '<li>' + errorImportColorEmpty + '</li>';\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        $('.import-file-label').html(inputChooseFile);\r\n        importFileInput.value = '';\r\n\r\n        if (errorMessages !== '') {\r\n          showMessage('<ul>' + errorMessages + '</ul>', true);\r\n        } else {\r\n          browser.storage.sync.set({[markersKey]: storedArray}).then(() => {\r\n            showMessage(noticeSuccessImport);\r\n          }, onError);\r\n        }\r\n      } else {\r\n        showMessage(errorFileEmptyOrFormat, true);\r\n      }\r\n    });\r\n\r\n    reader.readAsText(importFile); // Read the uploaded file\r\n  } else {\r\n    showMessage(errorChooseFile, true);\r\n  }\r\n}\r\n\r\n$(document).ready(() => {\r\n  $('html').attr('lang', languageCode);\r\n  document.title = 'Environment Marker - ' + buttonOptions;\r\n\r\n  let exportButton = $('.export'),\r\n      importButton = $('.import');\r\n\r\n  exportButton.click(() => {\r\n    exportConfig();\r\n  });\r\n\r\n  importButton.click(() => {\r\n    importConfig();\r\n  });\r\n\r\n  $('#importFile').change((event) => {\r\n    if (event.target.files.length) {\r\n      $('.import-file-label').html(event.target.files[0].name);\r\n    }\r\n  });\r\n\r\n  browser.storage.sync.get(searchModeKey).then((storedSearchMode) => {\r\n    let storedSearchModeBool = storedSearchMode[searchModeKey] || false;\r\n    $('#enable-regexp').prop('checked', storedSearchModeBool);\r\n  }, onError);\r\n\r\n  $('#enable-regexp').change((event) => {\r\n    let enableRegexpValue = $(event.target).is(':checked');\r\n    browser.storage.sync.set({[searchModeKey]: enableRegexpValue }).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n\r\n  browser.storage.sync.get(tabCounterKey).then((storedTabCounter) => {\r\n    let storedTabCounterBool = storedTabCounter[tabCounterKey] || false;\r\n    $('#enable-tab-counter').prop('checked', storedTabCounterBool);\r\n  }, onError);\r\n\r\n  $('#enable-tab-counter').change((event) => {\r\n    let enableTabCounterValue = $(event.target).is(':checked');\r\n    browser.storage.sync.set({[tabCounterKey]: enableTabCounterValue }).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n\r\n  exportButton.html('<i class=\"fas fa-download fa-lg\"></i> ' + buttonExport);\r\n  importButton.html('<i class=\"fas fa-upload fa-lg\"></i> ' + buttonImport);\r\n  $('.import-file-label').html(inputChooseFile);\r\n  $('#import-warning').html(importWarning);\r\n  $('#enable-regexp-label').html(inputEnableRegExp);\r\n  $('#enable-tab-counter-label').html(inputEnableTabCounter);\r\n\r\n  $('#settings-section-label').html('<i class=\"fas fa-cog\"></i> ' + optionsSettingsSection);\r\n  $('#export-import-section-label').html('<i class=\"fas fa-sync-alt\"></i> ' + optionsExportImportSection);\r\n  $('#font-label').html(inputFontLabel);\r\n  $('#font-picker-help-block').html(inputFontHelpText);\r\n  $('#enable-regexp-help-block').html(inputRegExpHelpText);\r\n  $('#enable-tab-counter-help-block').html(inputTabCounterHelpText);\r\n\r\n  $('#font-picker').fontpicker({\r\n    lang: languageCodeTwoChar,\r\n    variants: true,\r\n    lazyLoad: true,\r\n    showClear: true,\r\n    nrRecents: 0,\r\n    localFonts: {\r\n      \"Arial\": {\r\n        \"category\": \"sans-serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Georgia\": {\r\n        \"category\": \"serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Times New Roman\": {\r\n        \"category\": \"serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Verdana\": {\r\n        \"category\": \"sans-serif\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n      }/*,\r\n      \"Action Man\": {},\r\n      \"Bauer\": {\r\n        \"category\": \"display\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n        \"subsets\": \"latin-ext,latin\"\r\n      },\r\n      \"Bubble\": {\r\n        \"category\": \"display\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n        \"subsets\": \"latin-ext,latin\"\r\n      }*/\r\n    },\r\n    localFontsUrl: '/libraries/fontpicker/fonts/',\r\n    onSelect: function(fontObject) {\r\n      let fontStoreValue = fontObject.fontType + ':' + fontObject.fontSpec;\r\n\r\n      browser.storage.sync.set({[fontKey]: fontStoreValue}).then(() => {\r\n        showMessage(noticeSettingSaved);\r\n      }, onError);\r\n    }\r\n  });\r\n\r\n  browser.storage.sync.get(fontKey).then((storedFont) => {\r\n    let fontString = storedFont[fontKey] || '';\r\n\r\n    if (fontString) {\r\n      let fontTmp = fontString.split(':'),\r\n          font = fontTmp[1],\r\n          variant = fontTmp[2];\r\n\r\n      $('#font-picker').val(font + ':' + variant).trigger('change');\r\n    }\r\n  });\r\n\r\n  $('.fp-clear').click(() => {\r\n    browser.storage.sync.set({[fontKey]: ''}).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n});\r\n"]}