{"version":3,"sources":["options.js"],"names":["noticeSuccessExport","browser","i18n","getMessage","noticeSuccessImport","errorNoRibbonsToExport","errorChooseFile","inputChooseFile","buttonExport","buttonImport","importWarning","errorImportLabelEmpty","errorImportUrlEmpty","errorImportColorEmpty","inputEnableRegExp","inputEnableTabCounter","inputEnableFaviconMarker","noticeSettingSaved","ariaLabelAlertClose","optionsSettingsSection","optionsExportImportSection","inputFontLabel","inputFontHelpText","inputRegExpHelpText","inputTabCounterHelpText","inputEnableFaviconMarkerHelpText","errorFileEmptyOrFormat","buttonOptions","exportFile","languageCode","getUILanguage","languageCodeTwoChar","split","markersKey","searchModeKey","tabCounterKey","faviconMarkerKey","swatchesKey","dbVersionKey","fontKey","exportFileName","onError","error","console","log","showMessage","textMsg","errorFlag","messageClass","$","length","alert","append","window","setTimeout","makeJsonExportFile","text","data","Blob","type","URL","revokeObjectURL","createObjectURL","exportConfig","configurations","markers","settings","storage","sync","get","then","storedResults","markersStoredArray","options","fontStoredString","searchModeStoredBool","tabCounterStoredBool","faviconMarkerStoredBool","colorSwatchesStoredArray","storedObject","push","url","settingUrl","color","settingColor","label","settingLabel","position","settingPosition","size","settingSize","fontString","searchModeBool","tabCounterBool","faviconMarkerBool","colorSwatchesArray","configurations_json","JSON","stringify","link","document","createElement","setAttribute","href","body","appendChild","requestAnimationFrame","event","MouseEvent","dispatchEvent","removeChild","importConfig","importFileInput","getElementById","importFile","files","reader","FileReader","addEventListener","importConfigObjects","parse","result","hasOwnProperty","storedArray","errorMessages","importConfigObject","set","storeObject","html","value","readAsText","ready","attr","title","exportButton","importButton","click","change","target","name","storedSearchMode","storedSearchModeBool","prop","enableRegexpValue","is","storedTabCounter","storedTabCounterBool","enableTabCounterValue","storedFaviconMarker","enableFaviconMarkerValue","fontpicker","lang","variants","lazyLoad","showClear","nrRecents","localFonts","Arial","category","Georgia","Verdana","localFontsUrl","onSelect","fontObject","fontStoreValue","fontType","fontSpec","storedFont","fontTmp","font","variant","val","trigger"],"mappings":"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","file":"options.min.js","sourcesContent":["let noticeSuccessExport = browser.i18n.getMessage(\"noticeSuccessExport\"),\r\n    noticeSuccessImport = browser.i18n.getMessage(\"noticeSuccessImport\"),\r\n    errorNoRibbonsToExport = browser.i18n.getMessage(\"errorNoRibbonsToExport\"),\r\n    errorChooseFile = browser.i18n.getMessage(\"errorChooseFile\"),\r\n    inputChooseFile = browser.i18n.getMessage(\"inputChooseFile\"),\r\n    buttonExport = browser.i18n.getMessage(\"buttonExport\"),\r\n    buttonImport = browser.i18n.getMessage(\"buttonImport\"),\r\n    importWarning = browser.i18n.getMessage(\"importWarning\"),\r\n    errorImportLabelEmpty = browser.i18n.getMessage(\"errorImportLabelEmpty\"),\r\n    errorImportUrlEmpty = browser.i18n.getMessage(\"errorImportUrlEmpty\"),\r\n    errorImportColorEmpty = browser.i18n.getMessage(\"errorImportColorEmpty\"),\r\n    inputEnableRegExp = browser.i18n.getMessage(\"inputEnableRegExp\"),\r\n    inputEnableTabCounter = browser.i18n.getMessage(\"inputEnableTabCounter\"),\r\n    inputEnableFaviconMarker = browser.i18n.getMessage(\"inputEnableFaviconMarker\"),\r\n    noticeSettingSaved = browser.i18n.getMessage(\"noticeSettingSaved\"),\r\n    ariaLabelAlertClose = browser.i18n.getMessage(\"ariaLabelAlertClose\"),\r\n    optionsSettingsSection = browser.i18n.getMessage(\"optionsSettingsSection\"),\r\n    optionsExportImportSection = browser.i18n.getMessage(\"optionsExportImportSection\"),\r\n    inputFontLabel = browser.i18n.getMessage(\"inputFontLabel\"),\r\n    inputFontHelpText = browser.i18n.getMessage(\"inputFontHelpText\"),\r\n    inputRegExpHelpText = browser.i18n.getMessage(\"inputRegExpHelpText\"),\r\n    inputTabCounterHelpText = browser.i18n.getMessage(\"inputTabCounterHelpText\"),\r\n    inputEnableFaviconMarkerHelpText = browser.i18n.getMessage(\"inputEnableFaviconMarkerHelpText\"),\r\n    errorFileEmptyOrFormat = browser.i18n.getMessage(\"errorFileEmptyOrFormat\"),\r\n    buttonOptions = browser.i18n.getMessage(\"buttonOptions\"),\r\n    exportFile = null;\r\n\r\nlet languageCode = browser.i18n.getUILanguage(),\r\n    languageCodeTwoChar = languageCode.split('-')[0];\r\nconst markersKey = '__em-markers__';\r\nconst searchModeKey = '__em-search-mode__';\r\nconst tabCounterKey = '__em-tab-counter__';\r\nconst faviconMarkerKey = '__em-favicon-marker__';\r\nconst swatchesKey = '__em-swatches__';\r\nconst dbVersionKey = '__em-version__';\r\nconst fontKey = '__em-font__';\r\nconst exportFileName = 'environment-marker-export.json';\r\n\r\nfunction onError(error) {\r\n  console.log(error);\r\n}\r\n\r\n/* Show error or success messages */\r\nfunction showMessage(textMsg, errorFlag = false) {\r\n  let messageClass = errorFlag ? 'alert-danger' : 'alert-success';\r\n  if ($('.alert-dismissible').length) {\r\n    $('.alert-dismissible').alert('close');\r\n  }\r\n\r\n  $('.outer-wrapper .message-container').append(\r\n    '<div class=\"alert ' + messageClass + ' alert-dismissible fade show\" role=\"alert\">' + textMsg +\r\n    '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"' + ariaLabelAlertClose + '\"></button>' +\r\n    '</div>'\r\n  );\r\n\r\n  window.setTimeout(function() {\r\n    $('.alert-dismissible').alert('close');\r\n  }, 3000);\r\n}\r\n\r\n/* Make a URL Object from json text */\r\nfunction makeJsonExportFile(text) {\r\n  let data = new Blob([text], { type: 'application/json' });\r\n\r\n  // If we are replacing a previously generated file we need to\r\n  // manually revoke the object URL to avoid memory leaks.\r\n  if (exportFile !== null) {\r\n    window.URL.revokeObjectURL(exportFile);\r\n  }\r\n\r\n  exportFile = window.URL.createObjectURL(data);\r\n  return exportFile;\r\n}\r\n\r\n/* Get all configurations from the storage and output a json file */\r\nfunction exportConfig() {\r\n  let configurations = {\r\n    markers: [],\r\n    settings: []\r\n  };\r\n\r\n  browser.storage.sync.get(markersKey).then((storedResults) => {\r\n    let markersStoredArray = storedResults[markersKey] || [];\r\n\r\n    if (markersStoredArray.length == 0) {\r\n      showMessage(errorNoRibbonsToExport, true);\r\n    } else {\r\n      browser.storage.sync.get([\r\n        fontKey,\r\n        searchModeKey,\r\n        tabCounterKey,\r\n        swatchesKey,\r\n        faviconMarkerKey\r\n       ], function(options) {\r\n        let fontStoredString = options[fontKey] || '';\r\n        let searchModeStoredBool = options[searchModeKey] || false;\r\n        let tabCounterStoredBool = options[tabCounterKey] || false;\r\n        let faviconMarkerStoredBool = options[faviconMarkerKey] || false;\r\n        let colorSwatchesStoredArray = options[swatchesKey];\r\n\r\n        for (let storedObject of markersStoredArray) {\r\n          configurations.markers.push({\r\n            \"url\": storedObject.settingUrl,\r\n            \"color\": storedObject.settingColor,\r\n            \"label\": storedObject.settingLabel,\r\n            \"position\": storedObject.settingPosition,\r\n            \"size\": storedObject.settingSize\r\n          });\r\n        }\r\n\r\n        configurations.settings.push({\r\n          \"fontString\": fontStoredString\r\n        });\r\n\r\n        configurations.settings.push({\r\n          \"searchModeBool\": searchModeStoredBool\r\n        });\r\n\r\n        configurations.settings.push({\r\n          \"tabCounterBool\": tabCounterStoredBool\r\n        });\r\n\r\n        configurations.settings.push({\r\n          \"faviconMarkerBool\": faviconMarkerStoredBool\r\n        });\r\n\r\n        configurations.settings.push({\r\n          \"colorSwatchesArray\": colorSwatchesStoredArray\r\n        });\r\n\r\n        let configurations_json = JSON.stringify(configurations);\r\n        let link = document.createElement('a');\r\n        link.setAttribute('download', exportFileName);\r\n        link.href = makeJsonExportFile(configurations_json);\r\n        document.body.appendChild(link);\r\n\r\n        // Wait for the link to be added to the document\r\n        window.requestAnimationFrame(function () {\r\n          let event = new MouseEvent('click');\r\n          link.dispatchEvent(event);\r\n          document.body.removeChild(link);\r\n\r\n          showMessage(noticeSuccessExport);\r\n        });\r\n      });\r\n    }\r\n  }, onError);\r\n}\r\n\r\n/* Read import file and load all settings into the stoage */\r\nfunction importConfig() {\r\n  let importFileInput = document.getElementById('importFile'),\r\n      importFile = importFileInput.files[0];\r\n\r\n  if (importFile) {\r\n    const reader = new FileReader();\r\n\r\n    // This event listener will happen when the reader has read the file\r\n    reader.addEventListener('load', function() {\r\n      let importConfigObjects = JSON.parse(reader.result); // Parse the result into an object\r\n\r\n      if (importConfigObjects.hasOwnProperty('markers') && importConfigObjects.hasOwnProperty('settings')) {\r\n        let storedArray = [],\r\n            errorMessages = '';\r\n\r\n        if (importConfigObjects.settings.length > 0) {\r\n          for (let importConfigObject of importConfigObjects.settings) {\r\n            if (importConfigObject.hasOwnProperty('searchModeBool')) {\r\n              browser.storage.sync.set({[searchModeKey]: importConfigObject.searchModeBool}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('tabCounterBool')) {\r\n              browser.storage.sync.set({[tabCounterKey]: importConfigObject.tabCounterBool}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('faviconMarkerBool')) {\r\n              browser.storage.sync.set({[faviconMarkerKey]: importConfigObject.faviconMarkerBool}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('fontString')) {\r\n              browser.storage.sync.set({[fontKey]: importConfigObject.fontString}).then(() => {\r\n              }, onError);\r\n            }\r\n\r\n            if (importConfigObject.hasOwnProperty('colorSwatchesArray')) {\r\n              browser.storage.sync.set({[swatchesKey]: importConfigObject.colorSwatchesArray}).then(() => {\r\n              }, onError);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (importConfigObjects.markers.length > 0) {\r\n          for (let importConfigObject of importConfigObjects.markers) {\r\n            if (importConfigObject.url !== '' && importConfigObject.color !== '' && importConfigObject.label !== '') {\r\n              let storeObject = {\r\n                settingUrl: importConfigObject.url,\r\n                settingColor: importConfigObject.color,\r\n                settingLabel: importConfigObject.label,\r\n                settingPosition: importConfigObject.position,\r\n                settingSize: importConfigObject.size\r\n              };\r\n              storedArray.push(storeObject);\r\n            } else {\r\n              // Empty field error messages\r\n              if (importConfigObject.url === '') {\r\n                errorMessages += '<li>' + errorImportUrlEmpty + '</li>';\r\n              }\r\n              if (importConfigObject.label === '') {\r\n                errorMessages += '<li>' + errorImportLabelEmpty + '</li>';\r\n              }\r\n              if (importConfigObject.color === '') {\r\n                errorMessages += '<li>' + errorImportColorEmpty + '</li>';\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        $('.import-file-label').html(inputChooseFile);\r\n        importFileInput.value = '';\r\n\r\n        if (errorMessages !== '') {\r\n          showMessage('<ul>' + errorMessages + '</ul>', true);\r\n        } else {\r\n          browser.storage.sync.set({[markersKey]: storedArray}).then(() => {\r\n            showMessage(noticeSuccessImport);\r\n          }, onError);\r\n        }\r\n      } else {\r\n        showMessage(errorFileEmptyOrFormat, true);\r\n      }\r\n    });\r\n\r\n    reader.readAsText(importFile); // Read the uploaded file\r\n  } else {\r\n    showMessage(errorChooseFile, true);\r\n  }\r\n}\r\n\r\n$(document).ready(() => {\r\n  $('html').attr('lang', languageCode);\r\n  document.title = 'Environment Marker - ' + buttonOptions;\r\n\r\n  let exportButton = $('.export'),\r\n      importButton = $('.import');\r\n\r\n  exportButton.click(() => {\r\n    exportConfig();\r\n  });\r\n\r\n  importButton.click(() => {\r\n    importConfig();\r\n  });\r\n\r\n  $('#importFile').change((event) => {\r\n    if (event.target.files.length) {\r\n      $('.import-file-label').html(event.target.files[0].name);\r\n    }\r\n  });\r\n\r\n  browser.storage.sync.get(searchModeKey).then((storedSearchMode) => {\r\n    let storedSearchModeBool = storedSearchMode[searchModeKey] || false;\r\n    $('#enable-regexp').prop('checked', storedSearchModeBool);\r\n  }, onError);\r\n\r\n  $('#enable-regexp').change((event) => {\r\n    let enableRegexpValue = $(event.target).is(':checked');\r\n    browser.storage.sync.set({[searchModeKey]: enableRegexpValue }).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n\r\n  browser.storage.sync.get(tabCounterKey).then((storedTabCounter) => {\r\n    let storedTabCounterBool = storedTabCounter[tabCounterKey] || false;\r\n    $('#enable-tab-counter').prop('checked', storedTabCounterBool);\r\n  }, onError);\r\n\r\n  $('#enable-tab-counter').change((event) => {\r\n    let enableTabCounterValue = $(event.target).is(':checked');\r\n    browser.storage.sync.set({[tabCounterKey]: enableTabCounterValue }).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n\r\n  browser.storage.sync.get(faviconMarkerKey).then((storedFaviconMarker) => {\r\n    let faviconMarkerBool = storedFaviconMarker[faviconMarkerKey] || false;\r\n    $('#enable-favicon-marker').prop('checked', faviconMarkerBool);\r\n  }, onError);\r\n\r\n  $('#enable-favicon-marker').change((event) => {\r\n    let enableFaviconMarkerValue = $(event.target).is(':checked');\r\n    browser.storage.sync.set({[faviconMarkerKey]: enableFaviconMarkerValue }).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n\r\n  exportButton.html('<i class=\"fas fa-download fa-lg\"></i> ' + buttonExport);\r\n  importButton.html('<i class=\"fas fa-upload fa-lg\"></i> ' + buttonImport);\r\n  $('.import-file-label').html(inputChooseFile);\r\n  $('#import-warning').html(importWarning);\r\n  $('#enable-regexp-label').html(inputEnableRegExp);\r\n  $('#enable-tab-counter-label').html(inputEnableTabCounter);\r\n  $('#enable-favicon-marker-label').html(inputEnableFaviconMarker);\r\n\r\n  $('#settings-section-label').html('<i class=\"fas fa-cog\"></i> ' + optionsSettingsSection);\r\n  $('#export-import-section-label').html('<i class=\"fas fa-sync-alt\"></i> ' + optionsExportImportSection);\r\n  $('#font-label').html(inputFontLabel);\r\n  $('#font-picker-help-block').html(inputFontHelpText);\r\n  $('#enable-regexp-help-block').html(inputRegExpHelpText);\r\n  $('#enable-tab-counter-help-block').html(inputTabCounterHelpText);\r\n  $('#enable-favicon-marker-help-block').html(inputEnableFaviconMarkerHelpText);\r\n\r\n  $('#font-picker').fontpicker({\r\n    lang: languageCodeTwoChar,\r\n    variants: true,\r\n    lazyLoad: true,\r\n    showClear: true,\r\n    nrRecents: 0,\r\n    localFonts: {\r\n      \"Arial\": {\r\n        \"category\": \"sans-serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Georgia\": {\r\n        \"category\": \"serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Times New Roman\": {\r\n        \"category\": \"serif\",\r\n        \"variants\": \"400,400i,600,600i\"\r\n      },\r\n      \"Verdana\": {\r\n        \"category\": \"sans-serif\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n      }/*,\r\n      \"Action Man\": {},\r\n      \"Bauer\": {\r\n        \"category\": \"display\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n        \"subsets\": \"latin-ext,latin\"\r\n      },\r\n      \"Bubble\": {\r\n        \"category\": \"display\",\r\n        \"variants\": \"400,400i,600,600i\",\r\n        \"subsets\": \"latin-ext,latin\"\r\n      }*/\r\n    },\r\n    localFontsUrl: '/libraries/fontpicker/fonts/',\r\n    onSelect: function(fontObject) {\r\n      let fontStoreValue = fontObject.fontType + ':' + fontObject.fontSpec;\r\n\r\n      browser.storage.sync.set({[fontKey]: fontStoreValue}).then(() => {\r\n        showMessage(noticeSettingSaved);\r\n      }, onError);\r\n    }\r\n  });\r\n\r\n  browser.storage.sync.get(fontKey).then((storedFont) => {\r\n    let fontString = storedFont[fontKey] || '';\r\n\r\n    if (fontString) {\r\n      let fontTmp = fontString.split(':'),\r\n          font = fontTmp[1],\r\n          variant = fontTmp[2];\r\n\r\n      $('#font-picker').val(font + ':' + variant).trigger('change');\r\n    }\r\n  });\r\n\r\n  $('.fp-clear').click(() => {\r\n    browser.storage.sync.set({[fontKey]: ''}).then(() => {\r\n      showMessage(noticeSettingSaved);\r\n    }, onError);\r\n  });\r\n});\r\n"]}