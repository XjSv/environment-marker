{"version":3,"sources":["content.js"],"names":["insertRibbon","color","url","label","position","removeExistingRibbon","ribbonWrapper","document","createElement","textColor","hexcolor","replace","r","parseInt","substr","g","b","getContrastYIQ","className","ribbon","setAttribute","textContent","str","num","length","slice","truncateString","appendChild","body","existingRibbons","querySelectorAll","remove","window","hasRun","browser","runtime","onMessage","addListener","message","command","Promise","resolve"],"mappings":"CAAA,WAcE,SAASA,EAAaC,EAAOC,EAAKC,EAAOC,GACvCC,IAEA,IAAIC,EAAgBC,SAASC,cAAc,OACvCC,EAqBN,SAAwBC,GACtBA,EAAWA,EAASC,QAAQ,IAAK,IACjC,IAAIC,EAAIC,SAASH,EAASI,OAAO,EAAG,GAAI,IACpCC,EAAIF,SAASH,EAASI,OAAO,EAAG,GAAI,IACpCE,EAAIH,SAASH,EAASI,OAAO,EAAG,GAAI,IAGxC,OAFgB,IAAJF,EAAgB,IAAJG,EAAgB,IAAJC,GAAY,KAEjC,IAAO,QAAU,QA5BhBC,CAAehB,GAE/BK,EAAcY,UAAY,kBAAoBd,EAAW,WAEzD,IAAIe,EAASZ,SAASC,cAAc,OACpCW,EAAOC,aAAa,QAAS,qBAAuBnB,EAAQ,YAAcQ,EAAY,KACtFU,EAAOD,UAAY,UAAYd,EAAW,UAC1Ce,EAAOE,YAOT,SAAwBC,EAAKC,GAC3B,GAAID,EAAIE,QAAUD,EAChB,OAAOD,EAET,OAAOA,EAAIG,MAAM,EAAGF,GAAO,MAXNG,CAAevB,EAAO,IAE3CG,EAAcqB,YAAYR,GAE1BZ,SAASqB,KAAKD,YAAYrB,GAuB5B,SAASD,IACP,IAAIwB,EAAkBtB,SAASuB,iBAAiB,mBAChD,IAAK,IAAIX,KAAUU,EACjBV,EAAOY,SAjDPC,OAAOC,QAA4B,oBAAXC,UAG5BF,OAAOC,QAAS,EAsDhBC,QAAQC,QAAQC,UAAUC,YAAcC,IACd,cAApBA,EAAQC,QACVvC,EAAasC,EAAQrC,MAAOqC,EAAQpC,IAAKoC,EAAQnC,MAAOmC,EAAQlC,UACnC,UAApBkC,EAAQC,SACjBlC,IAEKmC,QAAQC,QAAQ,WArE3B","file":"content.min.js","sourcesContent":["(function() {\r\n  /**\r\n   * Check and set a global guard variable.\r\n   * If this content script is injected into the same page again,\r\n   * it will do nothing next time.\r\n   */\r\n  if (window.hasRun || typeof browser == \"undefined\") {\r\n    return;\r\n  }\r\n  window.hasRun = true;\r\n\r\n  /**\r\n   * Given a URL, background color create a ribbon and add it to the page.\r\n   */\r\n  function insertRibbon(color, url, label, position) {\r\n    removeExistingRibbon();\r\n\r\n    let ribbonWrapper = document.createElement('div'),\r\n        textColor = getContrastYIQ(color);\r\n\r\n    ribbonWrapper.className = 'ribbon-wrapper ' + position + '-wrapper';\r\n\r\n    let ribbon = document.createElement('div');\r\n    ribbon.setAttribute('style', 'background-color: ' + color + '; color: ' + textColor + ';');\r\n    ribbon.className = 'ribbon ' + position + '-ribbon';\r\n    ribbon.textContent = truncateString(label, 10);\r\n\r\n    ribbonWrapper.appendChild(ribbon);\r\n\r\n    document.body.appendChild(ribbonWrapper);\r\n  }\r\n\r\n  function truncateString(str, num) {\r\n    if (str.length <= num) {\r\n      return str\r\n    }\r\n    return str.slice(0, num) + '...'\r\n  }\r\n\r\n  function getContrastYIQ(hexcolor) {\r\n    hexcolor = hexcolor.replace('#', '');\r\n    let r = parseInt(hexcolor.substr(0, 2), 16),\r\n        g = parseInt(hexcolor.substr(2, 2), 16),\r\n        b = parseInt(hexcolor.substr(4, 2), 16),\r\n        yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\r\n\r\n    return (yiq >= 128) ? 'black' : 'white';\r\n  }\r\n\r\n  /**\r\n   * Remove the ribbon from the page.\r\n   */\r\n  function removeExistingRibbon() {\r\n    let existingRibbons = document.querySelectorAll('.ribbon-wrapper');\r\n    for (let ribbon of existingRibbons) {\r\n      ribbon.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listen for messages from the background script.\r\n   * Call \"addRibbon()\" or \"reset()\".\r\n  */\r\n  browser.runtime.onMessage.addListener( (message) => {\r\n    if (message.command === 'addRibbon') {\r\n      insertRibbon(message.color, message.url, message.label, message.position);\r\n    } else if (message.command === 'reset') {\r\n      removeExistingRibbon();\r\n    }\r\n    return Promise.resolve('done');\r\n  });\r\n\r\n})();\r\n"]}