{"version":3,"sources":["content.js"],"names":["insertRibbon","color","url","label","fontSize","position","size","fontData","removeExistingRibbon","removeExistingStylesheets","bgColor","txtColor","badge","Favico","textColor","type","animation","changeFavicon","ribbonWrapper","document","createElement","ribbon","ribbonText","hexColor","replace","r","parseInt","substr","g","b","getContrastYIQ","undefined","className","textContent","appendChild","fontTmp","split","fontLocation","font","variant","weight","italic","test","setAttribute","googleFontStylesheet","href","rel","head","style","innerHTML","body","existingRibbons","querySelectorAll","remove","existingStylesheet","stylesheet","window","hasRun","browser","runtime","onMessage","addListener","message","command","Promise","resolve"],"mappings":"CAAA,WAcE,SAASA,EAAaC,EAAOC,EAAKC,EAAOC,EAAUC,EAAUC,EAAMC,GACjEC,IACAC,IAiGD,SAAuBC,EAASC,GAC/B,IAAIC,EAAQ,EACE,IAAIC,OAAO,CACrBH,QAAUA,EACVI,UAAWJ,EACXK,KAAM,SACNV,SAAU,OACVW,UAAY,YAGRJ,MAAMA,GAxGdK,CAAchB,GAEd,IAAIiB,EAAgBC,SAASC,cAAc,OACvCC,EAASF,SAASC,cAAc,OAChCE,EAAaH,SAASC,cAAc,OACpCN,EAwDN,SAAwBS,GACtBA,EAAWA,EAASC,QAAQ,IAAK,IACjC,IAAIC,EAAIC,SAASH,EAASI,OAAO,EAAG,GAAI,IACpCC,EAAIF,SAASH,EAASI,OAAO,EAAG,GAAI,IACpCE,EAAIH,SAASH,EAASI,OAAO,EAAG,GAAI,IAGxC,OAFgB,IAAJF,EAAgB,IAAJG,EAAgB,IAAJC,GAAY,KAEjC,IAAO,QAAU,QA/DhBC,CAAe7B,GAqB/B,QAjBiB8B,IAAb3B,IACFA,EAAW,WAKA2B,IAATzB,IACFA,EAAO,UAGTY,EAAcc,UAAY,wBAA0B3B,EAAW,eAAiBC,EAAO,kBACvFe,EAAOW,UAAY,gBAAkB1B,EAAO,cAAgBD,EAAW,UACvEiB,EAAWU,UAAY,kBACvBV,EAAWW,YAAc9B,EACzBkB,EAAOa,YAAYZ,GACnBJ,EAAcgB,YAAYb,GAEtBd,EAAU,CACZ,IAAI4B,EAAU5B,EAAS6B,MAAM,KACzBC,EAAeF,EAAQ,GACvBG,EAAOH,EAAQ,GACfI,EAAUJ,EAAQ,IAAM,MACxBK,EAASd,SAASa,EAAQ,IAC1BE,EAAS,KAAKC,KAAKH,GAUvB,GARAlB,EAAOsB,aAAa,QAChB,qBAAuB1C,EACvB,YAAca,EACd,gBAAkBV,EAClB,qBAAuBkC,EACvB,mBAAqBE,EACrB,kBAAoBC,EAAS,SAAW,UAAY,KAEnC,WAAjBJ,EAA2B,CAC7B,IAAIO,EAAuBzB,SAASC,cAAc,QAC9CwB,EAAqBC,KAAO,2CAA6CP,EAAO,IAAMC,EAAU,gBAChGK,EAAqB7B,KAAO,WAC5B6B,EAAqBE,IAAM,aAC3BF,EAAqBZ,UAAY,uBAErCb,SAAS4B,KAAKb,YAAYU,OACrB,CACL,IAAII,EAAQ7B,SAASC,cAAc,SACnC4B,EAAMC,UAAY,6BAA+BX,EAAO,iBAAmBA,EAAO,wCAA0CA,EAAO,4BACnInB,SAAS4B,KAAKb,YAAYc,SAG5B3B,EAAOsB,aAAa,QAAS,qBAAuB1C,EAAQ,YAAca,EAAY,gBAAkBV,EAAW,OAErHe,SAAS+B,KAAKhB,YAAYhB,GAgB5B,SAASV,IACP,IAAI2C,EAAkBhC,SAASiC,iBAAiB,sBAChD,IAAK,IAAI/B,KAAU8B,EACjB9B,EAAOgC,SAOX,SAAS5C,IACP,IAAI6C,EAAqBnC,SAASiC,iBAAiB,yBACnD,IAAK,IAAIG,KAAcD,EACrBC,EAAWF,SApGXG,OAAOC,QAA4B,oBAAXC,UAG5BF,OAAOC,QAAS,EAyHhBC,QAAQC,QAAQC,UAAUC,aAAcC,IACd,cAApBA,EAAQC,QACV/D,EAAa8D,EAAQ7D,MAAO6D,EAAQ5D,IAAK4D,EAAQ3D,MAAO2D,EAAQ1D,SAAU0D,EAAQzD,SAAUyD,EAAQxD,KAAMwD,EAAQxB,MACrF,UAApBwB,EAAQC,UACjBvD,IACAC,KAGKuD,QAAQC,QAAQ,YA1I3B","file":"content.min.js","sourcesContent":["(function() {\r\n  /**\r\n   * Check and set a global guard variable.\r\n   * If this content script is injected into the same page again,\r\n   * it will do nothing next time.\r\n   */\r\n  if (window.hasRun || typeof browser == \"undefined\") {\r\n    return;\r\n  }\r\n  window.hasRun = true;\r\n\r\n  /**\r\n   * Given a URL, background color create a ribbon and add it to the page.\r\n   */\r\n  function insertRibbon(color, url, label, fontSize, position, size, fontData) {\r\n    removeExistingRibbon();\r\n    removeExistingStylesheets();\r\n\r\n    // Set the a badge/bullet to the websites favicon.\r\n    changeFavicon(color, textColor);\r\n\r\n    let ribbonWrapper = document.createElement('div'),\r\n        ribbon = document.createElement('div'),\r\n        ribbonText = document.createElement('div'),\r\n        textColor = getContrastYIQ(color);\r\n\r\n    // For backwards compatibility for users that already have ribbons configured.\r\n    // @TODO: Remove sometime in the future\r\n    if (fontSize === undefined) {\r\n      fontSize = '14';\r\n    }\r\n\r\n    // For backwards compatibility for users that already have ribbons configured.\r\n    // @TODO: Remove sometime in the future\r\n    if (size === undefined) {\r\n      size = 'normal';\r\n    }\r\n\r\n    ribbonWrapper.className = 'em-ribbon-wrapper em-' + position + '-wrapper em-' + size + '-ribbon-wrapper';\r\n    ribbon.className = 'em-ribbon em-' + size + '-ribbon em-' + position + '-ribbon';\r\n    ribbonText.className = 'em-ribbon-label';\r\n    ribbonText.textContent = label;\r\n    ribbon.appendChild(ribbonText);\r\n    ribbonWrapper.appendChild(ribbon);\r\n\r\n    if (fontData) {\r\n      let fontTmp = fontData.split(':'),\r\n          fontLocation = fontTmp[0],\r\n          font = fontTmp[1],\r\n          variant = fontTmp[2] || '400',\r\n          weight = parseInt(variant,10),\r\n          italic = /i$/.test(variant);\r\n\r\n      ribbon.setAttribute('style',\r\n          \"background-color: \" + color +\r\n          \"; color: \" + textColor +\r\n          \"; font-size: \" + fontSize +\r\n          \"px; font-family: '\" + font +\r\n          \"'; font-weight: \" + weight +\r\n          \"; font-style: \" + (italic ? 'italic' : 'normal') + \";\");\r\n\r\n      if (fontLocation === 'google') {\r\n        let googleFontStylesheet = document.createElement('link');\r\n            googleFontStylesheet.href = 'https://fonts.googleapis.com/css?family=' + font + ':' + variant + '&display=swap';\r\n            googleFontStylesheet.type = 'text/css';\r\n            googleFontStylesheet.rel = 'stylesheet';\r\n            googleFontStylesheet.className = 'em-google-stylesheet';\r\n\r\n        document.head.appendChild(googleFontStylesheet);\r\n      } else {\r\n        let style = document.createElement('style');\r\n        style.innerHTML = \"@font-face { font-family:'\" + font + \"'; src:local('\" + font + \"'), url('/libraries/fontpicker/fonts/\" + font + \".woff') format('woff'); }\";\r\n        document.head.appendChild(style);\r\n      }\r\n    } else {\r\n      ribbon.setAttribute('style', \"background-color: \" + color + \"; color: \" + textColor + \"; font-size: \" + fontSize + \"px;\");\r\n    }\r\n    document.body.appendChild(ribbonWrapper);\r\n  }\r\n\r\n  function getContrastYIQ(hexColor) {\r\n    hexColor = hexColor.replace('#', '');\r\n    let r = parseInt(hexColor.substr(0, 2), 16),\r\n        g = parseInt(hexColor.substr(2, 2), 16),\r\n        b = parseInt(hexColor.substr(4, 2), 16),\r\n        yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\r\n\r\n    return (yiq >= 128) ? 'black' : 'white';\r\n  }\r\n\r\n  /**\r\n   * Remove any existing ribbons from the page.\r\n   */\r\n  function removeExistingRibbon() {\r\n    let existingRibbons = document.querySelectorAll('.em-ribbon-wrapper');\r\n    for (let ribbon of existingRibbons) {\r\n      ribbon.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove any stylesheets that have been previously injected from the page.\r\n   */\r\n  function removeExistingStylesheets() {\r\n    let existingStylesheet = document.querySelectorAll('.em-google-stylesheet');\r\n    for (let stylesheet of existingStylesheet) {\r\n      stylesheet.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove any stylesheets that have been previously injected from the page.\r\n   */\r\n   function changeFavicon(bgColor, txtColor) {\r\n    let badge = 1;\r\n    let favicon = new Favico({\r\n        bgColor : bgColor,\r\n        textColor: bgColor,\r\n        type: 'circle',\r\n        position: 'down',\r\n        animation : 'popFade',\r\n      });\r\n    //intial value\r\n    favicon.badge(badge);\r\n  }\r\n\r\n  /**\r\n   * Listen for messages from the background script.\r\n   * Call \"insertRibbon()\" or \"removeExistingRibbon()\".\r\n  */\r\n  browser.runtime.onMessage.addListener( (message) => {\r\n    if (message.command === 'addRibbon') {\r\n      insertRibbon(message.color, message.url, message.label, message.fontSize, message.position, message.size, message.font);\r\n    } else if (message.command === 'reset') {\r\n      removeExistingRibbon();\r\n      removeExistingStylesheets();\r\n    }\r\n\r\n    return Promise.resolve('done');\r\n  });\r\n\r\n})();\r\n"]}